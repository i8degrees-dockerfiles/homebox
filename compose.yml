# compose.yml:jeff
#
# Docker compose template
#
---

networks:
  traefik-proxy:
    attachable: true
    driver: overlay
    external: true
  # NOTE(JEFF): This network does not exist when we have opt-in to using
  # SQLITE backend as we have!
  #homebox-db:

#volumes:
  # NOTE(JEFF): This volume should only be used when not using a bind mount
  # as your method of separating user data from else.
  #
  # volumes:
    #- homebox-data:${HBOX_STORAGE_DATA}:rw
  #homebox-data:
    #driver: local
  # NOTE(JEFF): This network does not exist when we have opt-in to using
  # SQLITE backend as we have!
  #homebox-db:
    #driver: local

services:

  # NOTE(JEFF): This service does not exist when we have opt-in to using
  # SQLITE backend as we have!
  #homebox-db:
    #networks:
      #- homebox-server

  homebox-server:
    env_file:
      - .env
    networks:
      - traefik-proxy
    ports:
      - 3100:${HBOX_WEB_PORT}
    # https://hub.docker.com/r/sysadminsmedia/homebox/tags
    # image: sysadminsmedia/homebox:${HBOX_TAG:-latest}
    # https://ghcr.io/sysadminsmedia/homebox:latest
    image: ghcr.io/sysadminsmedia/homebox:${HBOX_TAG:-latest}
    container_name: homebox-server
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl/certs:/etc/ssl/certs:ro
      # bind mount opt
      - ./data:${HBOX_STORAGE_DATA}:rw

  homebox-proxy:
    depends_on:
      - homebox-server
    env_file:
      - .env
    networks:
      - traefik-proxy
    ports:
      - ${NGINX_WEB_PORT:-80}:80
    # https://hub.docker.com/_/nginx
    image: nginx:alpine
    container_name: homebox-proxy
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl/certs:/etc/ssl/certs:ro
      - ./mounts/nginx/conf.d:/etc/nginx/conf.d:ro,z
      - ./mounts/nginx/snippets:/etc/nginx/snippets:ro,z
    labels:
      - "traefik.enable=true"
      # https://inventory.fs1.home
      - "traefik.http.routers.homebox-fs1.rule=Host(`inventory.fs1.home`) && PathPrefix(`/`)"
      - "traefik.http.routers.homebox-fs1.entrypoints=websecure"
      - "traefik.http.services.homebox-fs1.loadbalancer.server.port=80"
      - "traefik.http.routers.homebox-fs1.service=homebox-fs1"
      - "traefik.http.routers.homebox-fs1.tls.certresolver=staging-web-acme"
      # NOTE(JEFF): This may not be a necessity as we are using nginx as the
      # backend proxy here
      #- "traefik.http.routers.homebox-fs1.middlewares=wss@file"
